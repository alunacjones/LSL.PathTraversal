<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <SnkFile>LSL.snk</SnkFile>
  </PropertyGroup>

  <PropertyGroup Condition="Exists('$(SnkFile)')">
    <AssemblyOriginatorKeyFile>$(SnkFile)</AssemblyOriginatorKeyFile>
    <SignAssembly>True</SignAssembly>      
  </PropertyGroup>

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <TargetFrameworks>netstandard2.0</TargetFrameworks>
    <Version>1.0.1</Version>
    <PackageVersion>1.0.1</PackageVersion>
    <PackageTags>path;traversal;traverse;file;match;heirarchy;search</PackageTags>
    <PackageReadmeFile>readme.md</PackageReadmeFile>
    <PackageDescription>A path traversal library to match a file by moving up the directory structure from a start folder</PackageDescription>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RepositoryUrl>https://github.com/alunacjones/LSL.PathTraversal</RepositoryUrl>
    <Authors>alunacjones</Authors>
    <LangVersion>12</LangVersion>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <Target Name="CopyReadmeAndValidate" BeforeTargets="Build">
    <PropertyGroup>
      <ReadmeContent>$([System.IO.File]::ReadAllText('../../readme.md').TrimEnd())</ReadmeContent>  
      <FixedReadmeContent>$([System.Text.RegularExpressions.Regex]::Replace($(ReadmeContent), "&lt;!-- HIDE --&gt;(.|\n|\r)*&lt;!-- END:HIDE --&gt;",""))</FixedReadmeContent>
    </PropertyGroup>

    <WriteLinesToFile File="../../docs/index.md" Overwrite="true" Lines="$(FixedReadmeContent)"/>

    <PropertyGroup>
      <HasNoTags>false</HasNoTags>
      <HasNoDescription>false</HasNoDescription>
      <HasNoReadmeContent>false</HasNoReadmeContent>
      <ErrorIfMissing>false</ErrorIfMissing>
      <HasNoTags Condition="'$(PackageTags)' == ''">true</HasNoTags>
      <HasNoDescription Condition="$(PackageDescription) == 'Description here'">true</HasNoDescription>
      <HasNoReadmeContent Condition="$(ReadMeContent.Contains('Provide package documentation here.'))">true</HasNoReadmeContent>
      <ErrorIfMissing Condition="$(Configuration) != 'Debug'">true</ErrorIfMissing>
    </PropertyGroup>
  </Target>

  <Target Name="ReportWarnings" AfterTargets="CopyReadmeAndValidate" Condition="$(ErrorIfMissing) == 'false'">
      <Warning Text="Package tags have not been set" Condition="$(HasNoTags)" />
      <Warning Text="Package description has not been set" Condition="$(HasNoDescription)" />
      <Warning Text="readme.md file has no documentation" Condition="$(HasNoReadmeContent)" /> 
  </Target>

  <Target Name="ReportErrors" AfterTargets="CopyReadmeAndValidate" Condition="$(ErrorIfMissing)">
      <Error Text="Package tags have not been set" Condition="$(HasNoTags)" />
      <Error Text="Package description has not been set" Condition="$(HasNoDescription)" />
      <Error Text="readme.md file has no documentation" Condition="$(HasNoReadmeContent)" />    
  </Target>

  <ItemGroup> 
    <None Include="..\..\readme.md" Pack="true" PackagePath=""/>
  </ItemGroup>   
</Project>
